START 1 OMIT
$ go tool pprof <binary> <profile output> // HL
Welcome to pprof!  For help, type 'help'.
(pprof) top // HL
Total: 462 samples
 235  50.9%  50.9%      237  51.3% runtime.cgocall // HL
  98  21.2%  72.1%       98  21.2% syscall.Syscall
  55  11.9%  84.0%       55  11.9% runtime.memmove
  41   8.9%  92.9%       41   8.9% hash/crc32.update
   7   1.5%  94.4%       11   2.4% MCentral_Grow
...
(pprof) top20 --cum // HL
Total: 462 samples
   0   0.0%   0.0%      458  99.1% runtime.gosched0
   0   0.0%   0.0%      381  82.5% main.main
   0   0.0%   0.0%      381  82.5% runtime.main
   1   0.2%   0.2%      303  65.6% github.com/DataDog/dd-go/czlib.Decompress // HL
 235  50.9%  51.1%      237  51.3% runtime.cgocall
END 1 OMIT
START 2 OMIT
(pprof) disasm crc32.update // HL
ROUTINE ====================== hash/crc32.update
    41     41 samples (flat, cumulative) 8.9% of total
-------------------- /usr/local/go/src/pkg/hash/crc32/crc32.go
     .      .   101: func update(crc uint32, tab *Table, p []byte) uint32 {
     .      .      50ca80: SUBQ $0x10, SP
     .      .      50ca84: MOVQ 0x20(SP), R9
     .      .   102: crc = ^crc // HL
     .      .      50ca89: MOVL 0x18(SP), AX
     .      .      50ca8d: XORL $-0x1, AX
     6      6   103: for _, v := range p {
(snip...)
    35     35   104: crc = tab[byte(crc)^v] ^ (crc >> 8)
     .      .      50caae: MOVL AX, BP
     .      .      50cab0: XORQ SI, BP
     .      .      50cab3: CMPQ $0x0, R9
     .      .      50cab7: JE 0x50cae5
     5      5      50cab9: MOVZX BP, BP
     1      1      50cabd: LEAQ 0(R9)(BP*4), BX
     5      5      50cac1: MOVL 0(BX), BX
    21     21      50cac3: MOVL AX, BP // HL
     1      1      50cac5: SHRL $0x8, BP
     .      .      50cac8: XORL BP, BX
     2      2      50caca: MOVL BX, AX
END 2 OMIT
START 3 OMIT
(pprof) list crc32.update // HL
Total: 462 samples
ROUTINE ====================== hash/crc32.update in /usr/local/go/src/pkg/hash/crc32/crc32.go
    41     41 Total samples (flat / cumulative)
     .      .  101: func update(crc uint32, tab *Table, p []byte) uint32 {
     .      .  102: 	crc = ^crc
     6      6  103: 	for _, v := range p {
    35     35  104: 		crc = tab[byte(crc)^v] ^ (crc >> 8) // HL
     .      .  105: 	}
     .      .  106: 	return ^crc
END 3 OMIT
